{
	"localEntityGraphConfiguration": {
		"comment": "Configuration of the local database",
		"localPKType": "VARCHAR",
		"localNPKType": "NVARCHAR",
		"localPKLength": 10000,
		"urlPattern": "jdbc:h2:%s",
		"user": "",
		"password": "",
		"driver": "org.h2.Driver",
		"lib": "lib/h2-2.2.224.jar"
	},
	
	"commentNullColumnPlaceholder": "For DBUnit flat XML files, null columns can carry a placeholder value which can later be replaced using a ReplacementDataSet. In Flat XML files the first row of a table defines the metadata. If a null column is omitted, none of the following rows can have this column! This is the default behaviour of Jailer. Thus, define a null placeholder and replace it with a null value when you load the data set with DBUnit.",
	"nullColumnPlaceholder": null,
	
	"commentDoMinimizeUPK": "If minimize-UPK is true, the UPK don't preserve order. This minimizes the size of the UPK, but leads to a reduction in performance.",
	"doMinimizeUPK": false,
	
	"commentRenderer": "HTML renderer ",
	"renderer": {
		"outputFolder": "render",
		"maxDepth": 0
	},
	
	"commentAdditionalSQLKeywords": "additional SQL keywords",
	"additionalSQLKeywords": "sensitive, datetime",
	
	"commentDatabaseConnectionInteractiveTimeout": "time in seconds waiting for an idle database connection to be tested if it is still valid",
	"databaseConnectionInteractiveTimeout": 240,
	
	"generateUpsertStatementsWithoutNulls": true,
	"tempFileFolder": "tmp",
	"urlRewriteRules": [
		{
			"comment": " IBM JDBC Connector ",
			"pattern": "^jdbc:ibm:(.*)$",
			"replacement": "jdbc:$1"
		}
	],
	
	"commentColumnsPerIFMTable": "number of columns per import-filter-mapping-table",
	"columnsPerIFMTable": 8,
	
	"dbms": [
		{
			"id": "ORACLE",
			"displayName": "Oracle",
			"liquibaseProductName": "oracle",
			"icon": "oracle.png",
			"urlPattern": "jdbc:oracle.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": true,
				"supportsMultiRowInserts": false,
				"upsertMode": "MERGE",
				"updateMode": null
			},
			"statisticRenovator": {
				"scriptFileName": "script/oracle/gatherStatistics.sql"
			},
			"jdbcProperties": {
				"CatalogOptions": "0",
				"defaultRowPrefetch": "5010"
			},
			"stringLiteralEscapeSequences": {
				"\\n": "' || chr(10) || '",
				"\\r": "' || chr(13) || '",
				"'": "''"
			},
			"sqlLimitSuffix": null,
			"tableProperties": "NOLOGGING",
			"sessionTemporaryTableManager": {
				"dmlTableReferencePrefix": "",
				"ddlTableReferencePrefix": "",
				"createTablePrefix": "CREATE GLOBAL TEMPORARY TABLE ",
				"createTableSuffix": "ON COMMIT PRESERVE ROWS",
				"createIndexPrefix": "CREATE INDEX ",
				"createIndexSuffix": "",
				"indexTablePrefix": "",
				"dropTablePrefix": "DROP TABLE ",
				"needsExclusiveAccess": true
			},
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": "'to_timestamp('''yyyy-MM-dd HH.mm.ss'.${NANO}'', ''YYYY-MM-DD HH24.MI.SS.${NANOFORMAT}'')'",
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": "empty_blob()",
			"emptyCLOBValue": "empty_clob()",
			"emptyNCLOBValue": "empty_clob()",
			"toBlob": "to_blob(hextoraw('%s'))",
			"toClob": "to_clob('%s')",
			"toNClob": "to_nclob('%s')",
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "hextoraw('%s')",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": false,
			"limitTransactionSize": {
				"limit": 30000,
				"afterSelect": null,
				"additionalWhereCondition": "rownum <= %1$s",
				"statementSuffix": null
			},
			"estimatedRowCountQuery": "SELECT TABLE_NAME, NUM_ROWS FROM ALL_TABLES WHERE OWNER = '%s'",
			"defaultSchemaQuery": "SELECT SYS_CONTEXT('USERENV','CURRENT_SCHEMA') FROM DUAL",
			"viewTextOrDDLQuery": "select TEXT from all_views where OWNER = '%1$s' and VIEW_NAME = '%2$s'",
			"virtualColumnsQuery": "SELECT TABLE_NAME, COLUMN_NAME FROM ALL_TAB_COLS WHERE OWNER = '${SCHEMA}' AND VIRTUAL_COLUMN = 'YES' AND NOT DATA_TYPE = 'XMLTYPE'",
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": "explain plan set statement_id = '%2$s' for %1$s",
			"explainQuery": "select * from table(dbms_xplan.display(NULL, '%2$s'))",
			"explainCleanup": "",
			"constraintsQuery": "\nSelect CNAME, TNAME, COLNAME, CTYPE, DETAIL From\n(Select 'PK' CTYPE, CONSTRAINT_NAME CNAME, TABLE_NAME TNAME, COLUMN_NAME COLNAME, null DETAIL, POSITION POS, 1 TYPEPOS\n\tfrom\n\t\tuser_constraints natural join user_cons_columns\n\twhere\n\t\tCONSTRAINT_TYPE = 'P'\n\t\tand STATUS = 'ENABLED'\n\t\tand TABLE_NAME not like 'BIN$%%'\n   \t\tand OWNER = '%1$s'\nunion all\nSelect 'Check' CTYPE, CONSTRAINT_NAME CNAME, TABLE_NAME TNAME, COLUMN_NAME COLNAME, SEARCH_CONDITION DETAIL, POSITION POS, 3 TYPEPOS\n\tfrom\n\t\tuser_constraints natural join user_cons_columns\n\twhere\n\t\tCONSTRAINT_TYPE = 'C'\n\t\tand TABLE_NAME not like 'BIN$%%'\n   \t\tand OWNER = '%1$s'\nunion all\n\t(\n\tSelect 'Unique' CTYPE, CNAME, TNAME, COLNAME, null DETAIL, POS, 2 TYPEPOS from\n\t\t(\n\t\tSelect i.INDEX_NAME CNAME, i.TABLE_NAME TNAME, c.COLUMN_NAME COLNAME, c.COLUMN_POSITION POS\n\t\tfrom USER_INDEXES i, USER_IND_COLUMNS c\n\t\twhere\n\t\t  i.TABLE_OWNER = '%1$s'\n\t\t  and i.UNIQUENESS = 'UNIQUE'\n\t\t  and i.TABLE_NAME not like 'BIN$%%'\n\t\t  and i.TABLE_NAME = c.TABLE_NAME\n\t\t  and i.INDEX_NAME = c.INDEX_NAME\n\t\tunion\n\t\tSelect con.CONSTRAINT_NAME CNAME, con.TABLE_NAME TNAME, cc.COLUMN_NAME COLNAME, cc.POSITION POS\n\t\tfrom USER_CONSTRAINTS con, USER_CONS_COLUMNS cc\n\t\twhere\n\t\t  con.CONSTRAINT_TYPE in ('U')\n\t\t  and con.OWNER = '%1$s'\n\t\t  and con.STATUS = 'ENABLED'\n\t\t  and con.TABLE_NAME not like 'BIN$%%'\n\t\t  and con.TABLE_NAME = cc.TABLE_NAME\n\t\t  and con.CONSTRAINT_NAME = cc.CONSTRAINT_NAME\n\t\t)\n\t)\n) order by TYPEPOS, CNAME, TNAME, POS, COLNAME\n        ",
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": "begin ? := dbms_metadata.get_ddl('${type}', '${table}', '${schema}'); end;",
			"datePattern": "'to_date('''yyyy-MM-dd''', ''YYYY-MM-DD'')'",
			"rowidName": "ROWID",
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": "select '\"' || TABLE_OWNER || '\".\"' || TABLE_NAME || '\"' from ALL_SYNONYMS where OWNER = '%1$s' and SYNONYM_NAME = '%2$s'",
			"importedKeysQuery": "SELECT null, c_dest.OWNER, c_dest.TABLE_NAME, c_dest.COLUMN_NAME, null, c_src.OWNER, c_src.TABLE_NAME, c_src.COLUMN_NAME, c_src.POSITION,        null, null, c_list.CONSTRAINT_NAME, c_list.R_CONSTRAINT_NAME, null FROM ALL_CONSTRAINTS c_list, ALL_CONS_COLUMNS c_src, ALL_CONS_COLUMNS c_dest WHERE c_list.CONSTRAINT_NAME   = c_src.CONSTRAINT_NAME  AND  c_list.OWNER = c_src.OWNER  AND  c_list.R_CONSTRAINT_NAME = c_dest.CONSTRAINT_NAME  AND  c_list.R_OWNER = c_dest.OWNER  AND  c_list.CONSTRAINT_TYPE = 'R'  AND  c_src.POSITION = c_dest.POSITION  AND  c_src.OWNER = '${SCHEMA}'  ORDER BY c_src.POSITION",
			"primaryKeysQuery": "SELECT null, c_src.OWNER, c_src.TABLE_NAME, c_src.COLUMN_NAME, c_src.POSITION, c_list.CONSTRAINT_NAME FROM ALL_CONSTRAINTS c_list, ALL_CONS_COLUMNS c_src WHERE c_list.CONSTRAINT_NAME   = c_src.CONSTRAINT_NAME  AND  c_list.OWNER             = c_src.OWNER  AND  c_list.CONSTRAINT_TYPE = 'P'  AND  c_list.CONSTRAINT_NAME not like 'BIN$%'  AND  c_src.OWNER      = '${SCHEMA}'  ORDER BY c_src.POSITION",
			"indexInfoQuery": "SELECT null, c_src.OWNER, c_src.TABLE_NAME, 0, null, c_list.CONSTRAINT_NAME, null, null, c_src.COLUMN_NAME FROM ALL_CONSTRAINTS c_list, ALL_CONS_COLUMNS c_src WHERE c_list.CONSTRAINT_NAME   = c_src.CONSTRAINT_NAME  AND  c_list.OWNER             = c_src.OWNER  AND  c_list.CONSTRAINT_TYPE = 'U'  AND  c_list.CONSTRAINT_NAME not like 'BIN$%'  AND  c_src.OWNER      = '${SCHEMA}'",
			"explainCreateExplainTable": null,
			"functionSourceQuery": "SELECT 'Source', text FROM all_source WHERE type = 'FUNCTION' and name = '%2$s' AND owner = '%1$s' ORDER BY line",
			"procedureSourceQuery": "SELECT 'Source', text FROM all_source WHERE type = 'PROCEDURE' and name = '%2$s' AND owner = '%1$s' ORDER BY line",
			"packageSourceQuery": "\nSELECT titel, text from (\nSELECT 'Specification' as titel, line, text FROM all_source where owner='%1$s' and type='PACKAGE' and name='%2$s'\nunion all\nSELECT 'Body' as titel, line, text FROM all_source where owner='%1$s' and type='PACKAGE BODY' and name='%2$s'\n) order by titel desc, line\n        ",
			"packageNamesQuery": "SELECT OBJECT_NAME FROM ALL_OBJECTS WHERE OBJECT_TYPE = 'PACKAGE' AND OWNER = '%1$s'",
			"fetchSize": null,
			"objectRenderers": [
				{
					"listQuery": "select TRIGGER_NAME, TRIGGER_TYPE, TRIGGERING_EVENT, TABLE_NAME, COLUMN_NAME, REFERENCING_NAMES, WHEN_CLAUSE, STATUS, DESCRIPTION, ACTION_TYPE, CROSSEDITION, BEFORE_STATEMENT, BEFORE_ROW, AFTER_ROW, AFTER_STATEMENT, INSTEAD_OF_ROW, FIRE_ONCE, APPLY_SERVER_ONLY from ALL_TRIGGERS where table_owner = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/triggers.png",
					"name": "Triggers",
					"itemDescription": {
						"listQuery": null,
						"textQuery": "select 'Body', TRIGGER_BODY from ALL_TRIGGERS where table_owner = '%1$s'",
						"iconURL": "/net/sf/jailer/ui/resource/trigger.png",
						"name": null,
						"itemDescription": null
					}
				},
				{
					"listQuery": "select SEQUENCE_NAME,SEQUENCE_OWNER,MIN_VALUE,MAX_VALUE,INCREMENT_BY,CYCLE_FLAG,ORDER_FLAG,CACHE_SIZE,LAST_NUMBER from ALL_SEQUENCES where SEQUENCE_OWNER = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/sequences.png",
					"name": "Sequences",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/sequence.png",
						"name": null,
						"itemDescription": null
					}
				}
			],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": "ROWID",
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "MSSQL",
			"displayName": "MS SQL Server",
			"liquibaseProductName": "mssql",
			"icon": "mssql.png",
			"urlPattern": "jdbc:sqlserver.*|jdbc:inetdae.*|jdbc:JTurbo.*|jdbc:weblogic:mssqlserver.*|jdbc:jtds:sqlserver.*|jdbc:JSQLConnect.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": false,
				"supportsMultiRowInserts": true,
				"upsertMode": "DB2",
				"updateMode": "MSSQL"
			},
			"statisticRenovator": {
				"scriptFileName": "script/mssql/update_statistics.sql"
			},
			"jdbcProperties": {
				"trustServerCertificate": "true"
			},
			"stringLiteralEscapeSequences": {
				"\\n": "' + char(10) + '",
				"\\r": "' + char(13) + '",
				"'": "''"
			},
			"sqlLimitSuffix": "TOP %s",
			"tableProperties": "",
			"sessionTemporaryTableManager": {
				"dmlTableReferencePrefix": "#",
				"ddlTableReferencePrefix": "#",
				"createTablePrefix": "CREATE TABLE ",
				"createTableSuffix": "",
				"createIndexPrefix": "CREATE INDEX ",
				"createIndexSuffix": "",
				"indexTablePrefix": "",
				"dropTablePrefix": "DROP TABLE ",
				"needsExclusiveAccess": false
			},
			"ncharPrefix": "N",
			"exportBlocks": [
				"TIMESTAMP",
				"timestamp"
			],
			"typeReplacement": {
				"TIMESTAMP": "DATETIME",
				"timestamp": "datetime"
			},
			"clobTypesRE": "varchar\\(max\\)|text\\(.*\\)",
			"nClobTypesRE": "nvarchar\\(max\\)|xml\\(.*\\)|ntext\\(.*\\)",
			"blobTypesRE": "varbinary\\(max\\)|image\\(.*\\)",
			"identityInserts": true,
			"timestampPattern": "'convert(datetime, '''yyyy-MM-dd'T'HH:mm:ss.SSS''', 126)'",
			"timestampWithNanoTypeName": "datetime2",
			"timestampWithNanoPattern": "'convert(datetime2, '''yyyy-MM-dd'T'HH:mm:ss'.${NANO}'', 126)'",
			"emptyBLOBValue": "0x",
			"emptyCLOBValue": "''",
			"emptyNCLOBValue": "N''",
			"toBlob": "0x%s",
			"toClob": "'%s'",
			"toNClob": "N'%s'",
			"embeddedLobSizeLimit": 7980,
			"binaryPattern": "0x%s",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": false,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": {
				"limit": 30000,
				"afterSelect": "TOP(%1$s)",
				"additionalWhereCondition": null,
				"statementSuffix": null
			},
			"estimatedRowCountQuery": "\nSELECT tbl.name, p.rows\nFROM sys.tables AS tbl\nINNER JOIN sys.indexes AS idx ON idx.object_id = tbl.object_id and idx.index_id < 2\nINNER JOIN sys.partitions AS p ON p.object_id=CAST(tbl.object_id AS int)\nAND p.index_id=idx.index_id\nWHERE SCHEMA_NAME(tbl.schema_id)='%s'\n\t\t",
			"defaultSchemaQuery": "SELECT SCHEMA_NAME()",
			"virtualColumnsQuery": "SELECT sys.objects.name AS TableName, sys.columns.name AS ColumnName FROM sys.columns JOIN sys.objects ON sys.columns.object_id = sys.objects.object_id AND sys.objects.type = 'U'join sys.schemas on sys.schemas.schema_id = sys.objects.schema_id WHERE sys.schemas.name = '${SCHEMA}' and (sys.columns.is_computed = 1 or sys.columns.generated_always_type != 0); SELECT sysobjects.name AS TableName, syscolumns.name AS ColumnName FROM syscolumns JOIN sysobjects ON syscolumns.id = sysobjects.id AND sysobjects.xtype = 'U' WHERE syscolumns.iscomputed = 1",
			"userDefinedColumnsQuery": "SELECT distinct DOMAIN_NAME from INFORMATION_SCHEMA.COLUMNS WHERE DOMAIN_NAME is not null",
			"nullableContraint": "NULL",
			"identifierQuoteString": "\"",
			"explainPrepare": "SET SHOWPLAN_ALL ON",
			"explainQuery": "%1$s",
			"explainCleanup": "SET SHOWPLAN_ALL OFF",
			"constraintsQuery": "\nSelect\n     CNAME,\n     TNAME,\n     COLNAME,\n     CTYPE,\n     DETAIL\nFrom\n     (\n          Select\n               KCU.CONSTRAINT_NAME CNAME,\n               KCU.TABLE_NAME TNAME,\n               KCU.COLUMN_NAME COLNAME,\n               'PK' CTYPE,\n               null DETAIL,\n               KCU.ORDINAL_POSITION POS,\n               1 TYPEPOS\n          From\n               INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n               join INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n               AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n               AND KCU.TABLE_NAME = C.TABLE_NAME\n               AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n          where\n               C.CONSTRAINT_TYPE = 'PRIMARY KEY'\n               AND KCU.TABLE_SCHEMA = '%1$s'\n          union all\n          Select\n               C.CONSTRAINT_NAME CNAME,\n               KCU.TABLE_NAME TNAME,\n               KCU.COLUMN_NAME COLNAME,\n               'Unique' CTYPE,\n               null DETAIL,\n               KCU.ORDINAL_POSITION POS,\n               2 TYPEPOS\n          From\n               INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n               join INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n               AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n               AND KCU.TABLE_NAME = C.TABLE_NAME\n               AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n          where\n               C.CONSTRAINT_TYPE = 'UNIQUE'\n               AND KCU.TABLE_SCHEMA = '%1$s'\n          union all\n          SELECT\n               i.name CNAME,\n               OBJECT_NAME(i.[object_id]) TNAME,\n               c.Name COLNAME,\n               'Unique' CTYPE,\n               null DETAIL,\n               ic.key_ordinal POS,\n               2 TYPEPOS\n          FROM\n               sys.indexes AS i\n               INNER JOIN sys.index_columns AS ic ON i.[object_id] = ic.[object_id]\n               AND i.index_id = ic.index_id\n               INNER JOIN sys.columns c ON ic.column_id = c.column_id\n               AND ic.[object_id] = c.[object_id]\n               AND i.is_primary_key != 1\n               AND i.is_unique = 1\n               AND i.is_unique_constraint = 0\n               AND i.is_disabled = 0\n               AND i.is_hypothetical = 0\n               AND OBJECT_SCHEMA_NAME(i.[object_id]) = '%1$s'\n          union all\n          Select\n               C.CONSTRAINT_NAME CNAME,\n               C.TABLE_NAME TNAME,\n               CU.COLUMN_NAME COLNAME,\n               'Check' CTYPE,\n               CHECK_CLAUSE DETAIL,\n               1 POS,\n               3 TYPEPOS\n          From\n               INFORMATION_SCHEMA.CHECK_CONSTRAINTS CC\n               join INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CU on CU.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG\n               and CU.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA\n               and CU.CONSTRAINT_NAME = CC.CONSTRAINT_NAME\n               join INFORMATION_SCHEMA.TABLE_CONSTRAINTS C on C.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG\n               and C.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA\n               and C.CONSTRAINT_NAME = CC.CONSTRAINT_NAME\n               and C.CONSTRAINT_TYPE = 'CHECK'\n               and C.TABLE_SCHEMA = '%1$s'\n     ) pk\norder by\n     TYPEPOS,\n     CNAME,\n     TNAME,\n     POS,\n     COLNAME\n\t\t",
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "MySQL",
			"displayName": "MySQL",
			"liquibaseProductName": "mysql",
			"icon": "mysql.png",
			"urlPattern": "jdbc:mysql.*",
			"usesCatalog": true,
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": true,
				"supportsMultiRowInserts": true,
				"upsertMode": "UNION_ALL",
				"updateMode": "MYSQL"
			},
			"statisticRenovator": {
				"scriptFileName": "script/mysql/update_statistics.sql"
			},
			"jdbcProperties": {
				"noDatetimeStringSync": "true"
			},
			"stringLiteralEscapeSequences": {
				"\\\\": "\\\\",
				"\\26": "\\Z",
				"\"": "\\\"",
				"\\n": "\\n",
				"\\0": "\\0",
				"\\r": "\\r",
				"\\b": "\\b",
				"\\t": "\\t"
			},
			"sqlLimitSuffix": "LIMIT 0, %s",
			"tableProperties": "",
			"sessionTemporaryTableManager": null,
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"smallint": "int",
				"mediumint": "int",
				"SMALLINT": "INT",
				"tinyint": "int",
				"MEDIUMINT": "INT",
				"integer": "bigint",
				"TINYINT": "INT",
				"INT": "BIGINT",
				"int": "bigint",
				"INTEGER": "BIGINT"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": "'str_to_date('''yyyy-MM-dd HH:mm:ss'.${NANO}'', ''%Y-%m-%d %H:%i:%s.%f'')'",
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": "BINARY ''",
			"emptyCLOBValue": "''",
			"emptyNCLOBValue": "''",
			"toBlob": "0x%s",
			"toClob": "'%s'",
			"toNClob": "'%s'",
			"embeddedLobSizeLimit": 32000,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": {
				"limit": 30000,
				"afterSelect": null,
				"additionalWhereCondition": null,
				"statementSuffix": "limit %1$s"
			},
			"estimatedRowCountQuery": "select TABLE_NAME, max(CARDINALITY) from INFORMATION_SCHEMA.STATISTICS where TABLE_SCHEMA = '%s' group by TABLE_NAME",
			"defaultSchemaQuery": "Select DATABASE()",
			"virtualColumnsQuery": "SELECT TABLE_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '${SCHEMA}' AND (EXTRA LIKE '%VIRTUAL%' OR EXTRA = 'STORED GENERATED')",
			"userDefinedColumnsQuery": null,
			"nullableContraint": "NULL",
			"identifierQuoteString": "`",
			"explainPrepare": "",
			"explainQuery": "explain %1$s",
			"explainCleanup": "",
			"constraintsQuery": "\nSelect CNAME, TNAME, COLNAME, CTYPE, DETAIL From\n(\n\tSelect concat('pk_', KCU.TABLE_NAME) CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'PK' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 1 TYPEPOS\n    From\n        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n    join\n        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU\n            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n            AND KCU.TABLE_NAME = C.TABLE_NAME\n            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n    where\n        C.CONSTRAINT_TYPE = 'PRIMARY KEY'\n        AND KCU.TABLE_SCHEMA = '%1$s'\nunion all\n\tSelect C.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'Unique' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 2 TYPEPOS\n    From\n        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n    join\n        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU\n            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n            AND KCU.TABLE_NAME = C.TABLE_NAME\n            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n    where\n        C.CONSTRAINT_TYPE = 'UNIQUE'\n        AND KCU.TABLE_SCHEMA = '%1$s'\n) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME\n\t\t",
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {
				"datetime": "datetime(6)",
				"DATETIME": "DATETIME(6)",
				"TIMESTAMP": "TIMESTAMP(6)",
				"TIME": "TIME(6)",
				"time": "time(6)",
				"timestamp": "timestamp(6)"
			},
			"varcharLengthLimit": null,
			"ddlQuery": "SHOW CREATE ${type} `${schema}`.`${table}`",
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": "SHOW CREATE FUNCTION %1$s.%2$s",
			"procedureSourceQuery": "SHOW CREATE PROCEDURE %1$s.%2$s",
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": -2147483648,
			"objectRenderers": [
				{
					"listQuery": "SHOW TRIGGERS FROM %1$s",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/triggers.png",
					"name": "Triggers",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/trigger.png",
						"name": null,
						"itemDescription": null
					}
				}
			],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "MariaDB",
			"familyId": "MySQL",
			"icon": "mariadb.png",
			"liquibaseProductName": "mariadb",
			"displayName": "MariaDB",
			"urlPattern": "jdbc:mariadb.*",
			"usesCatalog": true,
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": true,
				"supportsMultiRowInserts": true,
				"upsertMode": "UNION_ALL",
				"updateMode": "MYSQL"
			},
			"statisticRenovator": {
				"scriptFileName": "script/mysql/update_statistics.sql"
			},
			"jdbcProperties": {
				"noDatetimeStringSync": "true"
			},
			"stringLiteralEscapeSequences": {
				"\\\\": "\\\\",
				"\\26": "\\Z",
				"\"": "\\\"",
				"\\n": "\\n",
				"\\0": "\\0",
				"\\r": "\\r",
				"\\b": "\\b",
				"\\t": "\\t"
			},
			"sqlLimitSuffix": "LIMIT 0, %s",
			"tableProperties": "",
			"sessionTemporaryTableManager": null,
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"smallint": "int",
				"mediumint": "int",
				"SMALLINT": "INT",
				"tinyint": "int",
				"MEDIUMINT": "INT",
				"integer": "bigint",
				"TINYINT": "INT",
				"INT": "BIGINT",
				"int": "bigint",
				"INTEGER": "BIGINT"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": "'str_to_date('''yyyy-MM-dd HH:mm:ss'.${NANO}'', ''%Y-%m-%d %H:%i:%s.%f'')'",
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": "BINARY ''",
			"emptyCLOBValue": "''",
			"emptyNCLOBValue": "''",
			"toBlob": "0x%s",
			"toClob": "'%s'",
			"toNClob": "'%s'",
			"embeddedLobSizeLimit": 32000,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": {
				"limit": 30000,
				"afterSelect": null,
				"additionalWhereCondition": null,
				"statementSuffix": "limit %1$s"
			},
			"estimatedRowCountQuery": "select TABLE_NAME, max(CARDINALITY) from INFORMATION_SCHEMA.STATISTICS where TABLE_SCHEMA = '%s' group by TABLE_NAME",
			"defaultSchemaQuery": "Select DATABASE()",
			"virtualColumnsQuery": "SELECT TABLE_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '${SCHEMA}' AND EXTRA LIKE '%VIRTUAL%'",
			"userDefinedColumnsQuery": null,
			"nullableContraint": "NULL",
			"identifierQuoteString": "`",
			"explainPrepare": "",
			"explainQuery": "explain %1$s",
			"explainCleanup": "",
			"constraintsQuery": "\nSelect CNAME, TNAME, COLNAME, CTYPE, DETAIL From\n(\n\tSelect concat('pk_', KCU.TABLE_NAME) CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'PK' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 1 TYPEPOS\n    From\n        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n    join\n        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU\n            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n            AND KCU.TABLE_NAME = C.TABLE_NAME\n            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n    where\n        C.CONSTRAINT_TYPE = 'PRIMARY KEY'\n        AND KCU.TABLE_SCHEMA = '%1$s'\nunion all\n\tSelect C.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'Unique' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 2 TYPEPOS\n    From\n        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n    join\n        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU\n            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n            AND KCU.TABLE_NAME = C.TABLE_NAME\n            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n    where\n        C.CONSTRAINT_TYPE = 'UNIQUE'\n        AND KCU.TABLE_SCHEMA = '%1$s'\n) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME\n\t\t",
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {
				"datetime": "datetime(6)",
				"DATETIME": "DATETIME(6)",
				"TIMESTAMP": "TIMESTAMP(6)",
				"TIME": "TIME(6)",
				"time": "time(6)",
				"timestamp": "timestamp(6)"
			},
			"varcharLengthLimit": null,
			"ddlQuery": "SHOW CREATE ${type} `${schema}`.`${table}`",
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": "SHOW CREATE FUNCTION %1$s.%2$s",
			"procedureSourceQuery": "SHOW CREATE PROCEDURE %1$s.%2$s",
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [
				{
					"listQuery": "SHOW TRIGGERS FROM %1$s",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/triggers.png",
					"name": "Triggers",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/trigger.png",
						"name": null,
						"itemDescription": null
					}
				}
			],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "DB2",
			"displayName": "DB2 LUW",
			"liquibaseProductName": "db2",
			"icon": "db2.png",
			"urlPattern": "jdbc:db2.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": true,
				"supportsInClauseForDeletes": true,
				"supportsMultiRowInserts": true,
				"upsertMode": "DB2",
				"updateMode": null
			},
			"statisticRenovator": {
				"scriptFileName": "script/db2/update_statistics.sql"
			},
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": {
				"\\n": "' || chr(10) || '",
				"\\r": "' || chr(13) || '",
				"'": "''"
			},
			"sqlLimitSuffix": "fetch first %s rows only",
			"tableProperties": "NOT LOGGED INITIALLY",
			"sessionTemporaryTableManager": {
				"dmlTableReferencePrefix": "",
				"ddlTableReferencePrefix": "",
				"createTablePrefix": "DECLARE GLOBAL TEMPORARY TABLE ",
				"createTableSuffix": "ON COMMIT PRESERVE ROWS NOT LOGGED",
				"createIndexPrefix": "CREATE INDEX SESSION.",
				"createIndexSuffix": "",
				"indexTablePrefix": "SESSION.",
				"dropTablePrefix": "DROP TABLE SESSION.",
				"needsExclusiveAccess": true
			},
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"GRAPHIC": "VARCHAR",
				"graphic": "varchar"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": null,
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": "blob('')",
			"emptyCLOBValue": "clob('')",
			"emptyNCLOBValue": "nclob('')",
			"toBlob": "blob('%s')",
			"toClob": "clob('%s')",
			"toNClob": "nclob('%s')",
			"embeddedLobSizeLimit": 32000,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": "SELECT TABNAME, CARD FROM SYSSTAT.TABLES WHERE TABSCHEMA = '%s'",
			"defaultSchemaQuery": null,
			"viewTextOrDDLQuery": "SELECT TEXT FROM SYSCAT.VIEWS WHERE VIEWSCHEMA = '%1$s' and VIEWNAME = '%2$s'",
			"virtualColumnsQuery": "SELECT TABNAME, COLNAME from syscat.columns WHERE TABSCHEMA='${SCHEMA}' AND GENERATED='A'",
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": "explain plan for %1$s",
			"explainQuery": "\nWITH tree(operator_ID, level, path, explain_time, cycle)\nAS\n(\nSELECT 1 operator_id\n     , 0 level\n     , CAST('001' AS VARCHAR(1000)) path\n     , max(explain_time) explain_time\n     , 0\n  FROM SYSTOOLS.EXPLAIN_OPERATOR O\n WHERE O.EXPLAIN_REQUESTER = SESSION_USER\nUNION ALL\nSELECT s.source_id\n     , level + 1\n     , tree.path || '/' || LPAD(CAST(s.source_id AS VARCHAR(3)), 3, '0')  path\n     , tree.explain_time\n     , POSITION('/' || LPAD(CAST(s.source_id AS VARCHAR(3)), 3, '0')  || '/' IN path USING OCTETS)\n  FROM tree\n     , SYSTOOLS.EXPLAIN_STREAM S\n WHERE s.target_id    = tree.operator_id\n   AND s.explain_time = tree.explain_time\n   AND S.Object_Name IS NULL\n   AND S.explain_requester = SESSION_USER\n   AND tree.cycle = 0\n   AND level < 100\n)\nSELECT *\n  FROM (\nSELECT \"Explain Plan\"\n  FROM (\nSELECT CAST(   LPAD(id,        MAX(LENGTH(id))        OVER(), ' ')\n            || ' | '\n            || RPAD(operation, MAX(LENGTH(operation)) OVER(), ' ')\n            || ' | '\n            || LPAD(rows,      MAX(LENGTH(rows))      OVER(), ' ')\n            || ' | '\n            -- Don't show ActualRows columns if there are no actuals available at all\n            || CASE WHEN COUNT(ActualRows) OVER () > 1 -- the heading 'ActualRows' is always present, so \"1\" means no OTHER values\n                    THEN LPAD(ActualRows, MAX(LENGTH(ActualRows)) OVER(), ' ') || ' | '\n                    ELSE ''\n               END\n            || LPAD(cost,      MAX(LENGTH(cost))      OVER(), ' ')\n         AS VARCHAR(100)) \"Explain Plan\"\n     , path\n  FROM (\nSELECT 'ID' ID\n     , 'Operation' Operation\n     , 'Rows' Rows\n     , 'ActualRows' ActualRows\n     , 'Cost' Cost\n     , '0' Path\n  FROM SYSIBM.SYSDUMMY1\n-- TODO: UNION ALL yields duplicate. where do they come from?\nUNION\nSELECT CAST(tree.operator_id as VARCHAR(254)) ID\n     , CAST(LPAD(' ', tree.level, ' ')\n       || CASE WHEN tree.cycle = 1\n               THEN '(cycle) '\n               ELSE ''\n          END\n       || COALESCE (\n             TRIM(O.Operator_Type)\n          || COALESCE(' (' || argument || ')', '')\n          || ' '\n          || COALESCE(S.Object_Name,'')\n          , ''\n          )\n       AS VARCHAR(254)) AS OPERATION\n     , COALESCE(CAST(rows AS VARCHAR(254)), '') Rows\n     , CAST(ActualRows as VARCHAR(254)) ActualRows -- note: no coalesce\n     , COALESCE(CAST(CAST(O.Total_Cost AS BIGINT) AS VARCHAR(254)), '') Cost\n     , path\n  FROM tree\n  LEFT JOIN ( SELECT i.source_id\n              , i.target_id\n              , CAST(CAST(ROUND(o.stream_count) AS BIGINT) AS VARCHAR(12))\n                || ' of '\n                || CAST (total_rows AS VARCHAR(12))\n                || CASE WHEN total_rows > 0\n                         AND ROUND(o.stream_count) <= total_rows THEN\n                   ' ('\n                   || LPAD(CAST (ROUND(ROUND(o.stream_count)/total_rows*100,2)\n                          AS NUMERIC(5,2)), 6, ' ')\n                   || '%%)'\n                   ELSE ''\n                   END rows\n              , CASE WHEN act.actual_value is not null then\n                CAST(CAST(ROUND(act.actual_value) AS BIGINT) AS VARCHAR(12))\n                || ' of '\n                || CAST (total_rows AS VARCHAR(12))\n                || CASE WHEN total_rows > 0 THEN\n                   ' ('\n                   || LPAD(CAST (ROUND(ROUND(act.actual_value)/total_rows*100,2)\n                          AS NUMERIC(5,2)), 6, ' ')\n                   || '%%)'\n                   ELSE NULL\n                   END END ActualRows\n              , i.object_name\n              , i.explain_time\n         FROM (SELECT MAX(source_id) source_id\n                    , target_id\n                    , MIN(CAST(ROUND(stream_count,0) AS BIGINT)) total_rows\n                    , CAST(LISTAGG(object_name) AS VARCHAR(50)) object_name\n                    , explain_time\n                 FROM SYSTOOLS.EXPLAIN_STREAM\n                WHERE explain_time = (SELECT MAX(explain_time)\n                                        FROM SYSTOOLS.EXPLAIN_OPERATOR\n                                       WHERE EXPLAIN_REQUESTER = SESSION_USER\n                                     )\n                GROUP BY target_id, explain_time\n              ) I\n         LEFT JOIN SYSTOOLS.EXPLAIN_STREAM O\n           ON (    I.target_id=o.source_id\n               AND I.explain_time = o.explain_time\n               AND O.EXPLAIN_REQUESTER = SESSION_USER\n              )\n         LEFT JOIN SYSTOOLS.EXPLAIN_ACTUALS act\n           ON (    act.operator_id  = i.target_id\n               AND act.explain_time = i.explain_time\n               AND act.explain_requester = SESSION_USER\n               AND act.ACTUAL_TYPE  like 'CARDINALITY%%'\n              )\n       ) s\n    ON (    s.target_id    = tree.operator_id\n        AND s.explain_time = tree.explain_time\n       )\n  LEFT JOIN SYSTOOLS.EXPLAIN_OPERATOR O\n    ON (    o.operator_id  = tree.operator_id\n        AND o.explain_time = tree.explain_time\n        AND o.explain_requester = SESSION_USER\n       )\n  LEFT JOIN (SELECT LISTAGG (CASE argument_type\n                             WHEN 'UNIQUE' THEN\n                                  CASE WHEN argument_value = 'TRUE'\n                                       THEN 'UNIQUE'\n                                  ELSE NULL\n                                  END\n                             WHEN 'TRUNCSRT' THEN\n                                  CASE WHEN argument_value = 'TRUE'\n                                       THEN 'TOP-N'\n                                  ELSE NULL\n                                  END\n                             WHEN 'SCANDIR' THEN\n                                  CASE WHEN argument_value != 'FORWARD'\n                                       THEN argument_value\n                                  ELSE NULL\n                                  END\n                             ELSE argument_value\n                             END\n                           , ' ') argument\n                  , operator_id\n                  , explain_time\n               FROM SYSTOOLS.EXPLAIN_ARGUMENT EA\n              WHERE argument_type IN ('AGGMODE'   -- GRPBY\n                                     , 'UNIQUE', 'TRUNCSRT' -- SORT\n                                     , 'SCANDIR' -- IXSCAN, TBSCAN\n                                     , 'OUTERJN' -- JOINs\n                                     )\n                AND explain_requester = SESSION_USER\n              GROUP BY explain_time, operator_id\n            ) A\n    ON (    a.operator_id  = tree.operator_id\n        AND a.explain_time = tree.explain_time\n       )\n     ) O\nUNION ALL\nVALUES ('', 'A')\n    ,  ('', 'Y')\nUNION ALL\nSELECT CAST (LPAD(CASE WHEN operator_id = LAG  (operator_id)\n                                          OVER (PARTITION BY operator_id\n                                                    ORDER BY pred_order\n                                               )\n                       THEN ''\n                       ELSE operator_id || ' - '\n                  END\n                , MAX(LENGTH(operator_id )+4) OVER()\n                , ' ')\n             || how_applied\n             || ' '\n             || predicate_text\n          AS VARCHAR(100)) \"Predicate Information\"\n     , 'P' || LPAD(id_order, 5, '0') || pred_order path\n  FROM (SELECT CAST(operator_id AS VARCHAR(254)) operator_id\n             , LPAD(trim(how_applied)\n                  ,  MAX (LENGTH(TRIM(how_applied)))\n                    OVER (PARTITION BY operator_id)\n                  , ' '\n               ) how_applied\n             , CAST(substr(predicate_text, 1, 80) AS VARCHAR(80)) predicate_text\n             , CASE how_applied WHEN 'START' THEN '1'\n                                WHEN 'STOP'  THEN '2'\n                                WHEN 'SARG'  THEN '3'\n                                ELSE '9'\n               END pred_order\n             , operator_id id_order\n          FROM systools.explain_predicate p\n         WHERE explain_time = (SELECT MAX(explain_time)\n                                 FROM systools.explain_operator)\n       )\n)\nORDER BY path\n)\n\t\t",
			"explainCleanup": "",
			"constraintsQuery": "\nSelect CNAME, TNAME, COLNAME, CTYPE, DETAIL From\n(\n\tSelect CONST.CONSTNAME CNAME, CONST.TABNAME TNAME, PKCOL.COLNAME COLNAME, 'PK' CTYPE, null DETAIL, PKCOL.COLSEQ POS, 1 TYPEPOS\n\tFrom\n\t    syscat.tabconst CONST,\n        syscat.keycoluse PKCOL\n    WHERE\n        CONST.CONSTNAME = PKCOL.CONSTNAME\n        AND CONST.TABSCHEMA = PKCOL.TABSCHEMA\n        AND CONST.TABNAME = PKCOL.TABNAME\n        AND CONST.TYPE = 'P'\n        AND CONST.TABSCHEMA = '%1$s'\n\tunion all\n\tSelect I.INDNAME CNAME, I.TABNAME TNAME, u.COLNAME COLNAME, 'Unique' CTYPE, null DETAIL, u.COLSEQ POS, 2 TYPEPOS\n\tfrom\n\t\tsyscat.indexes i\n\t\tjoin syscat.indexcoluse u\n\t\t\ton i.INDSCHEMA = u.INDSCHEMA\n\t\t\tand i.INDNAME = u.INDNAME\n\t\twhere\n\t\t\ti.UNIQUERULE = 'U'\n\t\t\tand i.TABSCHEMA = '%1$s'\n\tunion all\n\t\tSelect C.CONSTNAME CNAME, C.TABNAME TNAME, ' ' COLNAME, 'Check' CTYPE, cast(TEXT as varchar) DETAIL, 1 POS, 3 TYPEPOS\n\t\tFrom\n\t\t\tsyscat.checks C\n\t\twhere\n\t\t\tC.TYPE = 'C'\n\t\t\tAND C.TABSCHEMA = '%1$s'\n) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME\n\t\t",
			"familyId": null,
			"testQuery": "Select A, B, C from (values (1, '2', 3), (4, '5', 6)) E(A, B, C)",
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": "SELECT TABNAME, COLNAME from syscat.columns WHERE TABSCHEMA='${SCHEMA}' AND GENERATED='A' AND \"IDENTITY\"='Y'",
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": " SELECT null, REF.REFTABSCHEMA, REF.REFTABNAME, PKCOL.COLNAME,        null, REF.TABSCHEMA, REF.TABNAME, FKCOL.COLNAME, FKCOL.COLSEQ,        null, null, REF.CONSTNAME, REF.REFKEYNAME, null FROM syscat.references REF, syscat.keycoluse PKCOL, syscat.keycoluse FKCOL WHERE REF.CONSTNAME = FKCOL.CONSTNAME   AND REF.TABSCHEMA = FKCOL.TABSCHEMA   AND REF.TABNAME = FKCOL.TABNAME   AND REF.REFKEYNAME = PKCOL.CONSTNAME   AND REF.REFTABSCHEMA = PKCOL.TABSCHEMA   AND REF.REFTABNAME = PKCOL.TABNAME   AND FKCOL.COLSEQ = PKCOL.COLSEQ   AND REF.REFTABSCHEMA = '${SCHEMA}'   ORDER BY FKCOL.COLSEQ",
			"primaryKeysQuery": "   SELECT null, CONST.TABSCHEMA, CONST.TABNAME, PKCOL.COLNAME, PKCOL.COLSEQ, CONST.CONSTNAME FROM syscat.tabconst CONST, syscat.keycoluse PKCOL WHERE CONST.CONSTNAME = PKCOL.CONSTNAME   AND CONST.TABSCHEMA = PKCOL.TABSCHEMA   AND CONST.TABNAME = PKCOL.TABNAME   AND CONST.TYPE = 'P'   AND CONST.TABSCHEMA = '${SCHEMA}'   ORDER BY PKCOL.COLSEQ",
			"indexInfoQuery": null,
			"explainCreateExplainTable": "CALL SYSPROC.SYSINSTALLOBJECTS('EXPLAIN', 'C',CAST (NULL AS VARCHAR(128)), CAST (NULL AS VARCHAR(128)))",
			"functionSourceQuery": "SELECT 'Source', cast(ROUTINE_DEFINITION as varchar) FROM SYSIBM.ROUTINES where ROUTINE_SCHEMA = '%1$s' and SPECIFIC_NAME = '%2$s' and ROUTINE_DEFINITION is not null",
			"procedureSourceQuery": "SELECT 'Source', cast(ROUTINE_DEFINITION as varchar) FROM SYSIBM.ROUTINES where ROUTINE_SCHEMA = '%1$s' and SPECIFIC_NAME = '%2$s' and ROUTINE_DEFINITION is not null",
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [
				{
					"listQuery": "SELECT TRIGNAME,OWNER,OWNERTYPE,TABSCHEMA,TABNAME,TRIGTIME,TRIGEVENT,GRANULARITY,VALID,CREATE_TIME,QUALIFIER,cast(FUNC_PATH as VARCHAR) FUNC_PATH,cast(TEXT as VARCHAR) TEXT,LAST_REGEN_TIME,REMARKS,PRECOMPILE_OPTIONS,COMPILE_OPTIONS FROM SYSCAT.TRIGGERS WHERE TRIGSCHEMA = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/triggers.png",
					"name": "Triggers",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/trigger.png",
						"name": null,
						"itemDescription": null
					}
				},
				{
					"listQuery": "select SEQNAME, SEQSCHEMA, DEFINER, DEFINERTYPE, OWNER, OWNERTYPE, SEQID, SEQTYPE, BASE_SEQSCHEMA, BASE_SEQNAME, INCREMENT, START, MAXVALUE, MINVALUE, NEXTCACHEFIRSTVALUE, CYCLE, CACHE, ORDER, DATATYPEID, SOURCETYPEID, CREATE_TIME, ALTER_TIME, PRECISION, ORIGIN, REMARKS from SYSCAT.SEQUENCES where OWNER = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/sequences.png",
					"name": "Sequences",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/sequence.png",
						"name": null,
						"itemDescription": null
					}
				}
			],
			"procedureDetailNeedsSpecificName": true,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "DB2_ZOS",
			"displayName": "DB2 z/OS",
			"liquibaseProductName": "db2z",
			"icon": "db2.png",
			"urlPattern": "jdbc:db2.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": true,
				"supportsInClauseForDeletes": false,
				"supportsMultiRowInserts": true,
				"upsertMode": "FROM_SYSDUMMY1",
				"updateMode": null
			},
			"statisticRenovator": {
				"scriptFileName": "script/db2/update_statistics.sql"
			},
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": {
				"\\n": "' || chr(10) || '",
				"\\r": "' || chr(13) || '",
				"'": "''"
			},
			"sqlLimitSuffix": "fetch first %s rows only",
			"tableProperties": "NOT LOGGED INITIALLY",
			"sessionTemporaryTableManager": {
				"dmlTableReferencePrefix": "",
				"ddlTableReferencePrefix": "",
				"createTablePrefix": "DECLARE GLOBAL TEMPORARY TABLE ",
				"createTableSuffix": "ON COMMIT PRESERVE ROWS NOT LOGGED",
				"createIndexPrefix": "CREATE INDEX SESSION.",
				"createIndexSuffix": "",
				"indexTablePrefix": "SESSION.",
				"dropTablePrefix": "DROP TABLE SESSION.",
				"needsExclusiveAccess": true
			},
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"GRAPHIC": "VARCHAR",
				"graphic": "varchar"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": null,
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": "blob('')",
			"emptyCLOBValue": "clob('')",
			"emptyNCLOBValue": "nclob('')",
			"toBlob": "blob('%s')",
			"toClob": "clob('%s')",
			"toNClob": "nclob('%s')",
			"embeddedLobSizeLimit": 32000,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": "SELECT TABNAME, CARD FROM SYSSTAT.TABLES WHERE TABSCHEMA = '%s'",
			"defaultSchemaQuery": null,
			"viewTextOrDDLQuery": "SELECT TEXT FROM SYSCAT.VIEWS WHERE VIEWSCHEMA = '%1$s' and VIEWNAME = '%2$s'",
			"virtualColumnsQuery": "SELECT TABNAME, COLNAME from syscat.columns WHERE TABSCHEMA='${SCHEMA}' AND GENERATED='A' AND NOT IDENTITY='Y'",
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": null,
			"explainQuery": null,
			"explainCleanup": null,
			"constraintsQuery": null,
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": "SELECT null, REF.REFTABSCHEMA, REF.REFTABNAME, PKCOL.COLNAME, null, REF.TABSCHEMA, REF.TABNAME, FKCOL.COLNAME, FKCOL.COLSEQ, null, null, REF.CONSTNAME, REF.REFKEYNAME, null FROM syscat.references REF, syscat.keycoluse PKCOL, syscat.keycoluse FKCOL WHERE REF.CONSTNAME = FKCOL.CONSTNAME   AND REF.TABSCHEMA = FKCOL.TABSCHEMA   AND REF.TABNAME = FKCOL.TABNAME   AND REF.REFKEYNAME = PKCOL.CONSTNAME   AND REF.REFTABSCHEMA = PKCOL.TABSCHEMA   AND REF.REFTABNAME = PKCOL.TABNAME   AND FKCOL.COLSEQ = PKCOL.COLSEQ   AND REF.REFTABSCHEMA = '${SCHEMA}' ORDER BY FKCOL.COLSEQ",
			"primaryKeysQuery": "SELECT null, CONST.TABSCHEMA, CONST.TABNAME, PKCOL.COLNAME, PKCOL.COLSEQ, CONST.CONSTNAME FROM syscat.tabconst CONST, syscat.keycoluse PKCOL WHERE CONST.CONSTNAME = PKCOL.CONSTNAME   AND CONST.TABSCHEMA = PKCOL.TABSCHEMA   AND CONST.TABNAME = PKCOL.TABNAME   AND CONST.TYPE = 'P'   AND CONST.TABSCHEMA = '${SCHEMA}'   ORDER BY PKCOL.COLSEQ",
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": "overriding system value"
		},
		
		{
			"id": "INFORMIX",
			"displayName": "Informix",
			"liquibaseProductName": "informix",
			"icon": "informix.png",
			"urlPattern": "jdbc:informix.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": true,
				"supportsInClauseForDeletes": true,
				"supportsMultiRowInserts": true,
				"upsertMode": "DB2",
				"updateMode": null
			},
			"statisticRenovator": {
				"scriptFileName": "script/informix/update_statistics.sql"
			},
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": null,
			"sqlLimitSuffix": "FIRST %s",
			"tableProperties": "",
			"sessionTemporaryTableManager": {
				"dmlTableReferencePrefix": "",
				"ddlTableReferencePrefix": "",
				"createTablePrefix": "CREATE TEMP TABLE ",
				"createTableSuffix": " WITH NO LOG",
				"createIndexPrefix": "CREATE INDEX ",
				"createIndexSuffix": "",
				"indexTablePrefix": "",
				"dropTablePrefix": "DROP TABLE ",
				"needsExclusiveAccess": true
			},
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"datetime": "datetime year to fraction",
				"serial": "int",
				"bigserial": "bigint",
				"serial8": "int8"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": "'cast('''yyyy-MM-dd HH.mm.ss'.${NANO}'' as datetime year to fraction)'",
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": null,
			"defaultSchemaQuery": null,
			"virtualColumnsQuery": null,
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": null,
			"explainQuery": null,
			"explainCleanup": null,
			"constraintsQuery": null,
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": 255,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "POSTGRESQL",
			"displayName": "PostgreSQL",
			"liquibaseProductName": "postgresql",
			"icon": "postgresql.png",
			"urlPattern": "jdbc:postgres.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": true,
				"supportsInClauseForDeletes": true,
				"supportsMultiRowInserts": true,
				"upsertMode": "DB2",
				"updateMode": "PG"
			},
			"statisticRenovator": {
				"scriptFileName": "script/postgres/update_statistics.sql"
			},
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": {
				"\\n": "' || chr(10) || '",
				"\\r": "' || chr(13) || '",
				"'": "''"
			},
			"sqlLimitSuffix": "LIMIT %s",
			"tableProperties": "CREATE UNLOGGED TABLE",
			"sessionTemporaryTableManager": {
				"dmlTableReferencePrefix": "",
				"ddlTableReferencePrefix": "",
				"createTablePrefix": "CREATE TEMPORARY TABLE ",
				"createTableSuffix": "",
				"createIndexPrefix": "CREATE INDEX ",
				"createIndexSuffix": "",
				"indexTablePrefix": "",
				"dropTablePrefix": "-- DROP TABLE ",
				"needsExclusiveAccess": false
			},
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"nvarchar": "varchar",
				"bigserial": "int8",
				"serial": "int4",
				"double": "double precision",
				"serial8": "int8",
				"smallserial": "int4",
				"DOUBLE": "DOUBLE PRECISION",
				"serial4": "int4",
				"NVARCHAR": "VARCHAR"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": "'to_timestamp('''yyyy-MM-dd HH.mm.ss'.${NANO}'', ''YYYY-MM-DD HH24.MI.SS.US'')'",
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "E'\\\\x%s'::bytea",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": false,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": "\nSELECT c.relname, c.reltuples::bigint AS estimate\nFROM   pg_class c\nJOIN   pg_namespace n ON n.oid = c.relnamespace\nWHERE  n.nspname = '%s'\n\t\t",
			"defaultSchemaQuery": "SELECT CURRENT_SCHEMA()",
			"virtualColumnsQuery": null,
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": "",
			"explainQuery": "explain %1$s",
			"explainCleanup": "",
			"constraintsQuery": "\nSelect CNAME, TNAME, COLNAME, CTYPE, DETAIL From\n(\n\tSelect KCU.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'PK' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 1 TYPEPOS\n    From\n        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n    join\n        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU\n            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n            AND KCU.TABLE_NAME = C.TABLE_NAME\n            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n    where\n        C.CONSTRAINT_TYPE = 'PRIMARY KEY'\n        AND KCU.TABLE_SCHEMA = '%1$s'\nunion all\n\tSelect C.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'Unique' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 2 TYPEPOS\n    From\n        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n    join\n        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU\n            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n            AND KCU.TABLE_NAME = C.TABLE_NAME\n            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n    where\n        C.CONSTRAINT_TYPE = 'UNIQUE'\n        AND KCU.TABLE_SCHEMA = '%1$s'\n\tunion all\n\tSelect C.CONSTRAINT_NAME CNAME, C.TABLE_NAME TNAME, CU.COLUMN_NAME COLNAME, 'Check' CTYPE, CHECK_CLAUSE DETAIL, 1 POS, 3 TYPEPOS\n\tFrom\n\t\tINFORMATION_SCHEMA.CHECK_CONSTRAINTS CC\n\tjoin\n\t\tINFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CU\n\t    on CU.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG\n\t    and CU.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA\n\t    and CU.CONSTRAINT_NAME = CC.CONSTRAINT_NAME\n\tjoin\n\t\tINFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n\t    on C.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG\n\t    and C.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA\n\t    and C.CONSTRAINT_NAME = CC.CONSTRAINT_NAME\n\t\tand C.CONSTRAINT_TYPE = 'CHECK'\n\t\tand C.TABLE_SCHEMA = '%1$s'\n) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME\n\t\t",
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {
				"daterange": "'$1'::$2",
				"inet": "'$1'::$2",
				"line": "'$1'::$2",
				"box": "'$1'::$2",
				"int4range": "'$1'::$2",
				"point": "'$1'::$2",
				"macaddr": "'$1'::$2",
				"tid": "'$1'::$2",
				"path": "'$1'::$2",
				"polygon": "'$1'::$2",
				"money": "'$1'::$2",
				"interval": "'$1'::$2",
				"cidr": "'$1'::$2",
				"time": "'$1'::$2",
				"lseg": "'$1'::$2",
				"circle": "'$1'::$2",
				"int8range": "'$1'::$2"
			},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": "''yyyy-MM-dd'''::date'",
			"rowidName": "ctid",
			"identityColumnsQuery": "Select table_name, column_name From information_schema.columns Where table_schema='${SCHEMA}' and is_identity='YES' and identity_generation='ALWAYS'",
			"partitionsQuery": "SELECT c.relname FROM pg_catalog.pg_namespace n, pg_catalog.pg_class c WHERE c.relnamespace = n.oid AND n.nspname = '${SCHEMA}' AND c.relispartition",
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": "\nSELECT 'Function', p.proname || '(' || pg_catalog.pg_get_function_arguments(p.oid) || ') RETURNS ' ||  pg_catalog.pg_get_function_result(p.oid)\nFROM pg_catalog.pg_proc p\n     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE p.proname = '%2$s' AND n.nspname = '%1$s'\n        ",
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [
				{
					"listQuery": "select trigger_name, event_manipulation,event_object_catalog,event_object_schema,event_object_table,action_order,action_condition,action_statement,action_orientation,action_timing,action_reference_old_table,action_reference_new_table,action_reference_old_row,action_reference_new_row,created FROM information_schema.triggers where trigger_schema = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/triggers.png",
					"name": "Triggers",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/trigger.png",
						"name": null,
						"itemDescription": null
					}
				},
				{
					"listQuery": "select sequence_name, sequence_schema, sequence_catalog, data_type, numeric_precision, numeric_precision_radix, numeric_scale, start_value, minimum_value, maximum_value, increment, cycle_option from information_schema.sequences where sequence_schema = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/sequences.png",
					"name": "Sequences",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/sequence.png",
						"name": null,
						"itemDescription": null
					}
				}
			],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": "tid",
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": true,
			"identityColumnInsertClause": "overriding system value"
		},
		
		{
			"id": "Redshift",
			"familyId": "POSTGRESQL",
			"displayName": "Redshift",
			"liquibaseProductName": "postgresql",
			"icon": "redshift.png",
			"urlPattern": "jdbc:redshift.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": true,
				"supportsInClauseForDeletes": true,
				"supportsMultiRowInserts": true,
				"upsertMode": "DB2",
				"updateMode": null
			},
			"statisticRenovator": {
				"scriptFileName": "script/postgres/update_statistics.sql"
			},
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": {
				"\\n": "' || chr(10) || '",
				"\\r": "' || chr(13) || '",
				"'": "''"
			},
			"sqlLimitSuffix": "LIMIT %s",
			"tableProperties": "CREATE UNLOGGED TABLE",
			"sessionTemporaryTableManager": {
				"dmlTableReferencePrefix": "",
				"ddlTableReferencePrefix": "",
				"createTablePrefix": "CREATE TEMPORARY TABLE ",
				"createTableSuffix": "",
				"createIndexPrefix": "CREATE INDEX ",
				"createIndexSuffix": "",
				"indexTablePrefix": "",
				"dropTablePrefix": "-- DROP TABLE ",
				"needsExclusiveAccess": false
			},
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"nvarchar": "varchar",
				"bigserial": "int8",
				"serial": "int4",
				"double": "double precision",
				"serial8": "int8",
				"smallserial": "int4",
				"DOUBLE": "DOUBLE PRECISION",
				"serial4": "int4",
				"NVARCHAR": "VARCHAR"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": "'to_timestamp('''yyyy-MM-dd HH.mm.ss'.${NANO}'', ''YYYY-MM-DD HH24.MI.SS.US'')'",
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "E'\\\\x%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": false,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": "\nSELECT c.relname, c.reltuples::bigint AS estimate\nFROM   pg_class c\nJOIN   pg_namespace n ON n.oid = c.relnamespace\nWHERE  n.nspname = '%s'\n\t\t",
			"defaultSchemaQuery": "SELECT CURRENT_SCHEMA()",
			"virtualColumnsQuery": null,
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": "",
			"explainQuery": "explain %1$s",
			"explainCleanup": "",
			"constraintsQuery": "\nSelect CNAME, TNAME, COLNAME, CTYPE, DETAIL From\n(\n\tSelect KCU.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'PK' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 1 TYPEPOS\n    From\n        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n    join\n        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU\n            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n            AND KCU.TABLE_NAME = C.TABLE_NAME\n            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n    where\n        C.CONSTRAINT_TYPE = 'PRIMARY KEY'\n        AND KCU.TABLE_SCHEMA = '%1$s'\nunion all\n\tSelect C.CONSTRAINT_NAME CNAME, KCU.TABLE_NAME TNAME, KCU.COLUMN_NAME COLNAME, 'Unique' CTYPE, null DETAIL, KCU.ORDINAL_POSITION POS, 2 TYPEPOS\n    From\n        INFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n    join\n        INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU\n            ON KCU.CONSTRAINT_CATALOG = C.CONSTRAINT_CATALOG\n            AND KCU.CONSTRAINT_SCHEMA = C.CONSTRAINT_SCHEMA\n            AND KCU.TABLE_NAME = C.TABLE_NAME\n            AND KCU.CONSTRAINT_NAME = C.CONSTRAINT_NAME\n    where\n        C.CONSTRAINT_TYPE = 'UNIQUE'\n        AND KCU.TABLE_SCHEMA = '%1$s'\n\tunion all\n\tSelect C.CONSTRAINT_NAME CNAME, C.TABLE_NAME TNAME, CU.COLUMN_NAME COLNAME, 'Check' CTYPE, CHECK_CLAUSE DETAIL, 1 POS, 3 TYPEPOS\n\tFrom\n\t\tINFORMATION_SCHEMA.CHECK_CONSTRAINTS CC\n\tjoin\n\t\tINFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CU\n\t    on CU.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG\n\t    and CU.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA\n\t    and CU.CONSTRAINT_NAME = CC.CONSTRAINT_NAME\n\tjoin\n\t\tINFORMATION_SCHEMA.TABLE_CONSTRAINTS C\n\t    on C.CONSTRAINT_CATALOG = CC.CONSTRAINT_CATALOG\n\t    and C.CONSTRAINT_SCHEMA = CC.CONSTRAINT_SCHEMA\n\t    and C.CONSTRAINT_NAME = CC.CONSTRAINT_NAME\n\t\tand C.CONSTRAINT_TYPE = 'CHECK'\n\t\tand C.TABLE_SCHEMA = '%1$s'\n) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME\n\t\t",
			"testQuery": null,
			"sqlExpressionRule": {
				"daterange": "'$1'::$2",
				"inet": "'$1'::$2",
				"line": "'$1'::$2",
				"box": "'$1'::$2",
				"int4range": "'$1'::$2",
				"point": "'$1'::$2",
				"macaddr": "'$1'::$2",
				"tid": "'$1'::$2",
				"path": "'$1'::$2",
				"polygon": "'$1'::$2",
				"money": "'$1'::$2",
				"interval": "'$1'::$2",
				"cidr": "'$1'::$2",
				"time": "'$1'::$2",
				"lseg": "'$1'::$2",
				"circle": "'$1'::$2",
				"int8range": "'$1'::$2"
			},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": "''yyyy-MM-dd'''::date'",
			"rowidName": "ctid",
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": "\nSELECT 'Function', p.proname || '(' || pg_catalog.pg_get_function_arguments(p.oid) || ') RETURNS ' ||  pg_catalog.pg_get_function_result(p.oid)\nFROM pg_catalog.pg_proc p\n     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\nWHERE p.proname = '%2$s' AND n.nspname = '%1$s'\n        ",
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [
				{
					"listQuery": "select trigger_name, event_manipulation,event_object_catalog,event_object_schema,event_object_table,action_order,action_condition,action_statement,action_orientation,action_timing,action_reference_old_table,action_reference_new_table,action_reference_old_row,action_reference_new_row,created FROM information_schema.triggers where trigger_schema = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/triggers.png",
					"name": "Triggers",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/trigger.png",
						"name": null,
						"itemDescription": null
					}
				},
				{
					"listQuery": "select sequence_name, sequence_schema, sequence_catalog, data_type, numeric_precision, numeric_precision_radix, numeric_scale, start_value, minimum_value, maximum_value, increment, cycle_option from information_schema.sequences where sequence_schema = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/sequences.png",
					"name": "Sequences",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/sequence.png",
						"name": null,
						"itemDescription": null
					}
				}
			],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": "tid",
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": true,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "CLOADSCAPE",
			"displayName": "Cloudscape",
			"liquibaseProductName": "unsupported",
			"icon": "other.png",
			"urlPattern": "jdbc:cloudscape.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": false,
				"supportsMultiRowInserts": false,
				"upsertMode": "FROM_JL_DUAL",
				"updateMode": null
			},
			"statisticRenovator": {
				"scriptFileName": "script/cloudscape/update_statistics.sql"
			},
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": null,
			"sqlLimitSuffix": null,
			"tableProperties": "",
			"sessionTemporaryTableManager": null,
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": null,
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": null,
			"defaultSchemaQuery": null,
			"virtualColumnsQuery": null,
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": null,
			"explainQuery": null,
			"explainCleanup": null,
			"constraintsQuery": null,
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "FIREBIRD",
			"displayName": "Firebird",
			"liquibaseProductName": "firebird",
			"icon": "firebird.png",
			"urlPattern": "jdbc:firebirdsql.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": false,
				"supportsMultiRowInserts": false,
				"upsertMode": "FROM_JL_DUAL",
				"updateMode": null
			},
			"statisticRenovator": {
				"scriptFileName": "script/firebird/update_statistics.sql"
			},
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": null,
			"sqlLimitSuffix": null,
			"tableProperties": "",
			"sessionTemporaryTableManager": null,
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"DOUBLE": "DOUBLE PRECISION"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": null,
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": null,
			"defaultSchemaQuery": null,
			"virtualColumnsQuery": null,
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": null,
			"explainQuery": null,
			"explainCleanup": null,
			"constraintsQuery": null,
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "DERBY",
			"displayName": "Derby",
			"liquibaseProductName": "derby",
			"icon": "derby.png",
			"urlPattern": "jdbc:derby.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": false,
				"supportsMultiRowInserts": false,
				"upsertMode": "FROM_JL_DUAL",
				"updateMode": null
			},
			"statisticRenovator": {
				"scriptFileName": "script/derby/update_statistics.sql"
			},
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": null,
			"sqlLimitSuffix": null,
			"tableProperties": "",
			"sessionTemporaryTableManager": null,
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": null,
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": null,
			"defaultSchemaQuery": null,
			"virtualColumnsQuery": null,
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": null,
			"explainQuery": null,
			"explainCleanup": null,
			"constraintsQuery": null,
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "SYBASE",
			"displayName": "Sybase",
			"liquibaseProductName": "sybase",
			"icon": "sybase.png",
			"urlPattern": "jdbc:sybase.*|jdbc:jtds:sybase.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": false,
				"supportsMultiRowInserts": true,
				"upsertMode": "DB2",
				"updateMode": null
			},
			"statisticRenovator": {
				"scriptFileName": "script/sybase/update_statistics.sql"
			},
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": null,
			"sqlLimitSuffix": "TOP %s",
			"tableProperties": "",
			"sessionTemporaryTableManager": {
				"dmlTableReferencePrefix": "#",
				"ddlTableReferencePrefix": "#",
				"createTablePrefix": "CREATE TABLE ",
				"createTableSuffix": "",
				"createIndexPrefix": "CREATE INDEX ",
				"createIndexSuffix": "",
				"indexTablePrefix": "",
				"dropTablePrefix": "DROP TABLE ",
				"needsExclusiveAccess": true
			},
			"ncharPrefix": null,
			"exportBlocks": [
				"TIMESTAMP",
				"timestamp"
			],
			"typeReplacement": {
				"TIMESTAMP": "DATETIME",
				"timestamp": "datetime"
			},
			"clobTypesRE": "varchar\\(max\\)|text\\(.*\\)",
			"nClobTypesRE": "nvarchar\\(max\\)|xml\\(.*\\)|ntext\\(.*\\)",
			"blobTypesRE": "varbinary\\(max\\)|image\\(.*\\)",
			"identityInserts": true,
			"timestampPattern": null,
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "0x%s",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": {
				"limit": 30000,
				"afterSelect": "TOP(%1$s)",
				"additionalWhereCondition": null,
				"statementSuffix": null
			},
			"estimatedRowCountQuery": null,
			"defaultSchemaQuery": null,
			"virtualColumnsQuery": null,
			"userDefinedColumnsQuery": null,
			"nullableContraint": "NULL",
			"identifierQuoteString": "\"",
			"explainPrepare": null,
			"explainQuery": null,
			"explainCleanup": null,
			"constraintsQuery": null,
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "SQLITE",
			"displayName": "SQLite",
			"liquibaseProductName": "sqlite",
			"icon": "sqlite.png",
			"urlPattern": "jdbc:sqlite.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": false,
				"supportsMultiRowInserts": false,
				"upsertMode": "UNION_ALL",
				"updateMode": null
			},
			"statisticRenovator": null,
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": null,
			"sqlLimitSuffix": "LIMIT %s",
			"tableProperties": "",
			"sessionTemporaryTableManager": {
				"dmlTableReferencePrefix": "",
				"ddlTableReferencePrefix": "",
				"createTablePrefix": "CREATE TEMPORARY TABLE ",
				"createTableSuffix": "",
				"createIndexPrefix": "CREATE INDEX ",
				"createIndexSuffix": "",
				"indexTablePrefix": "",
				"dropTablePrefix": "DROP TABLE ",
				"needsExclusiveAccess": true
			},
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"nvarchar": "varchar",
				"NVARCHAR": "VARCHAR"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": null,
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": "select tbl, cast(substr(stat, 0, instr(stat, ' ')) as integer) from sqlite_stat1",
			"defaultSchemaQuery": null,
			"virtualColumnsQuery": null,
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": null,
			"explainQuery": null,
			"explainCleanup": null,
			"constraintsQuery": null,
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "HSQL",
			"displayName": "HSQLDB",
			"liquibaseProductName": "hsqldb",
			"icon": "hsqldb.png",
			"urlPattern": "jdbc:hsqldb.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": false,
				"supportsMultiRowInserts": false,
				"upsertMode": "FROM_JL_DUAL",
				"updateMode": null
			},
			"statisticRenovator": null,
			"jdbcProperties": null,
			"stringLiteralEscapeSequences": null,
			"sqlLimitSuffix": "LIMIT %s",
			"tableProperties": "NOLOGGING",
			"sessionTemporaryTableManager": null,
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": null,
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": true,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": null,
			"defaultSchemaQuery": null,
			"virtualColumnsQuery": null,
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": null,
			"explainQuery": null,
			"explainCleanup": null,
			"constraintsQuery": null,
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "H2",
			"displayName": "H2",
			"liquibaseProductName": "h2",
			"icon": "h2.png",
			"urlPattern": "jdbc:h2.*",
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": true,
				"supportsMultiRowInserts": true,
				"upsertMode": "UNION_ALL",
				"updateMode": null
			},
			"statisticRenovator": null,
			"jdbcProperties": {
				"MODE": "DB2"
			},
			"stringLiteralEscapeSequences": {
				"\\n": "' || char(10) || '",
				"\\r": "' || char(13) || '",
				"'": "''"
			},
			"sqlLimitSuffix": "LIMIT %s",
			"tableProperties": "",
			"sessionTemporaryTableManager": null,
			"ncharPrefix": null,
			"exportBlocks": [],
			"typeReplacement": {
				"NVARCHAR": "VARCHAR",
				"CHARACTER VARYING": "VARCHAR"
			},
			"clobTypesRE": null,
			"nClobTypesRE": null,
			"blobTypesRE": null,
			"identityInserts": false,
			"timestampPattern": null,
			"timestampWithNanoTypeName": null,
			"timestampWithNanoPattern": null,
			"emptyBLOBValue": null,
			"emptyCLOBValue": null,
			"emptyNCLOBValue": null,
			"toBlob": null,
			"toClob": null,
			"toNClob": null,
			"embeddedLobSizeLimit": 3980,
			"binaryPattern": "x'%s'",
			"avoidLeftJoin": false,
			"supportsSchemasInIndexDefinitions": null,
			"useInlineViewsInDataBrowser": false,
			"limitTransactionSize": null,
			"estimatedRowCountQuery": "select TABLE_NAME, ROW_COUNT_ESTIMATE from INFORMATION_SCHEMA.TABLES where TABLE_TYPE!='VIEW' and TABLE_SCHEMA = '%s'",
			"defaultSchemaQuery": "SELECT SCHEMA()",
			"virtualColumnsQuery": "SELECT TABLE_NAME, COLUMN_NAME from INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='${SCHEMA}' AND IS_COMPUTED",
			"userDefinedColumnsQuery": null,
			"nullableContraint": null,
			"identifierQuoteString": "\"",
			"explainPrepare": "",
			"explainQuery": "explain %1$s",
			"explainCleanup": "",
			"constraintsQuery": "\nSelect CNAME, TNAME, COLNAME, CTYPE, DETAIL From\n(\n\tSelect C.CONSTRAINT_NAME CNAME, TCC.TABLE_NAME TNAME, '' COLNAME, 'Check' CTYPE, C.CHECK_CLAUSE DETAIL, 1 POS, 3 TYPEPOS\n\tFrom\n\t\tINFORMATION_SCHEMA.CHECK_CONSTRAINTS C join INFORMATION_SCHEMA.TABLE_CONSTRAINTS TCC on C.CONSTRAINT_CATALOG = TCC.TABLE_CATALOG and C.CONSTRAINT_SCHEMA = TCC.TABLE_SCHEMA and C.CONSTRAINT_NAME = TCC.CONSTRAINT_NAME\n\twhere\n\t\tTCC.TABLE_SCHEMA = 'PUBLIC'\t\t\n) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME\n\nfallback contraint query\n\nSelect CNAME, TNAME, COLNAME, CTYPE, DETAIL From\n(\n\tSelect C.CONSTRAINT_NAME CNAME, C.TABLE_NAME TNAME, C.COLUMN_LIST COLNAME, 'PK' CTYPE, null DETAIL, 1 POS, 1 TYPEPOS\n\tFrom\n\t\tINFORMATION_SCHEMA.CONSTRAINTS C\n\twhere\n\t\tC.CONSTRAINT_TYPE = 'PRIMARY KEY'\n\t\tAND C.TABLE_SCHEMA = '%1$s'\n\tunion all\n\tSelect I.INDEX_NAME CNAME, I.TABLE_NAME TNAME, I.COLUMN_NAME COLNAME, 'Unique' CTYPE, null DETAIL, I.ORDINAL_POSITION POS, 2 TYPEPOS\n\tFrom\n\t\tINFORMATION_SCHEMA.INDEXES I\n\twhere\n\t\tI.INDEX_TYPE_NAME = 'UNIQUE INDEX'\n\t\tAND I.TABLE_SCHEMA = '%1$s'\n\tunion all\n\tSelect C.CONSTRAINT_NAME CNAME, C.TABLE_NAME TNAME, case when C.COLUMN_LIST is null then '' else C.COLUMN_LIST end COLNAME, 'Check' CTYPE, CHECK_EXPRESSION DETAIL, 1 POS, 3 TYPEPOS\n\tFrom\n\t\tINFORMATION_SCHEMA.CONSTRAINTS C\n\twhere\n\t\tC.CONSTRAINT_TYPE = 'CHECK'\n\t\tAND C.TABLE_SCHEMA = '%1$s'\n) pk order by TYPEPOS, CNAME, TNAME, POS, COLNAME\n\t\t",
			"familyId": null,
			"testQuery": null,
			"sqlExpressionRule": {},
			"experimentalTypeReplacement": {},
			"varcharLengthLimit": null,
			"ddlQuery": null,
			"ddlCall": null,
			"datePattern": null,
			"rowidName": null,
			"identityColumnsQuery": null,
			"partitionsQuery": null,
			"synonymTableQuery": null,
			"importedKeysQuery": null,
			"primaryKeysQuery": null,
			"indexInfoQuery": null,
			"explainCreateExplainTable": null,
			"functionSourceQuery": null,
			"procedureSourceQuery": null,
			"packageSourceQuery": null,
			"packageNamesQuery": null,
			"fetchSize": null,
			"objectRenderers": [
				{
					"listQuery": "select TRIGGER_NAME, \n       TRIGGER_SCHEMA, \n       EVENT_MANIPULATION, \n       EVENT_OBJECT_CATALOG, \n       EVENT_OBJECT_SCHEMA, \n       EVENT_OBJECT_TABLE, \n       ACTION_ORIENTATION, \n       ACTION_TIMING, \n       IS_ROLLBACK, \n       JAVA_CLASS, \n       QUEUE_SIZE, \n       NO_WAIT, \n       REMARKS FROM information_schema.triggers WHERE TRIGGER_SCHEMA = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/triggers.png",
					"name": "Triggers",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/trigger.png",
						"name": null,
						"itemDescription": null
					}
				},
				{
					"listQuery": "select SEQUENCE_NAME,\n       SEQUENCE_SCHEMA, \n       DATA_TYPE, \n       NUMERIC_PRECISION, \n       NUMERIC_PRECISION_RADIX, \n       NUMERIC_SCALE, \n       START_VALUE, \n       MINIMUM_VALUE, \n       MAXIMUM_VALUE, \n       INCREMENT, \n       CYCLE_OPTION, \n       DECLARED_DATA_TYPE, \n       DECLARED_NUMERIC_PRECISION, \n       DECLARED_NUMERIC_SCALE, \n       BASE_VALUE, \n       CACHE, \n       REMARKS from information_schema.sequences where SEQUENCE_SCHEMA = '%1$s'",
					"textQuery": null,
					"iconURL": "/net/sf/jailer/ui/resource/sequences.png",
					"name": "Sequences",
					"itemDescription": {
						"listQuery": null,
						"textQuery": null,
						"iconURL": "/net/sf/jailer/ui/resource/sequence.png",
						"name": null,
						"itemDescription": null
					}
				}
			],
			"procedureDetailNeedsSpecificName": false,
			"rowidType": null,
			"transactionTemporaryTableManager": null,
			"supportsCStyleBackslashEscapes": false,
			"identityColumnInsertClause": null
		},
		
		{
			"id": "ClickHouse",
			"displayName": "ClickHouse",
			"liquibaseProductName": "unsupported",
			"icon": "clickhouse.png",
			"urlPattern": "jdbc:(clickhouse|ch):.*",
			
			"sqlDialect": {
				"needsValuesKeywordForDeletes": false,
				"supportsInClauseForDeletes": true,
				"supportsMultiRowInserts": true,
				"upsertMode": "UNION_ALL",
				"updateMode": null
			},

			"usesCatalog": true,
			"supportsGlobalWorkingtables": false,
			
			"primaryKeysQuery": "Select table_schema, table_schema, table_name, column_name, ordinal_position, constraint_name From information_schema.key_column_usage where table_schema = '${SCHEMA}'  ORDER BY ordinal_position"
		}
	]
}